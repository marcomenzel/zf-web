<h2>ZF2016-01: Potential Insufficient Entropy Vulnerability in ZF1</h2>

<p>
    We discovered several methods used to generate random numbers in ZF1 that
    potentially used insufficient entropy. These random number generators
    are used in the following method calls:
</p>

<ul>
    <li><code>Zend_Ldap_Attribute::createPassword</code></li>
    <li><code>Zend_Form_Element_Hash::_generateHash</code></li>
    <li><code>Zend_Gdata_HttpClient::filterHttpRequest</code></li>
    <li><code>Zend_Filter_Encrypt_Mcrypt::_srand</code></li>
    <li><code>Zend_OpenId::randomBytes</code></li>
</ul>

<p>
    In each case, the methods were using <code>rand()</code> or
    <code>mt_rand()</code>, neither of which can generate cryptographically secure
    values. This could potentially lead to information disclosure should an
    attacker be able to brute force the random number generation. 
</p>

<p>
    Moreover, we discovered a potential security issue in the usage of the
    <a href="http://php.net/manual/en/function.openssl-random-pseudo-bytes.php">openssl_random_pseudo_bytes()</a>
    function in <code>Zend_Crypt_Math::randBytes</code>, reported in PHP BUG
    <a href="https://bugs.php.net/bug.php?id=70014">#70014</a>, and the security implications
    reported in a discussion <a href="https://github.com/paragonie/random_compat/issues/96">on the random_compat library</a>.
</p>

<h3>Action Taken</h3>

<p>
    We replaced the usage of <code>rand()</code> and <code>mt_rand()</code>
    with the random generators of ZF1 implemented in
    <a href="https://github.com/zendframework/zf1/blob/master/library/Zend/Crypt/Math.php">Zend_Crypt_Math()</a>.
</p>

<p>
    Moreover, we removed the usage of <code>openssl_random_pseudo_bytes()</code> functions
    in <code>Zend_Crypt_Math::randBytes()</code>. This removal is not a BC break for Linux users
    thanks to the usage of <code>/dev/urandom</code> as an entropy source. For Windows users, this
    can be a BC break if the Mcrypt extension is not enabled.
</p>

<p>
    The following releases contain the fixes:
</p>

<ul>
    <li>Zend Framework 1.12.18</li>
</ul>

<h3>Recommendations</h3>

<p>
    If you are using an affected version of PHP, we highly recommend upgrading
    immediately to Zend Framework 1.12.18.
</p>

<h3>Acknowledgments</h3>

<p>
    The Zend Framework team thanks the following for identifying the issues and
    working with us to help protect its users: 
</p>

<ul class="ul">
    <li>Brian Engert of Soliant Consulting, who discovered, reported, and proposed a patch for the issue;</li>
    <li><a href="http://zimuel.it">Enrico Zimuel</a>, who tested the patch and added the patch for the OpenSSL usage removal.</li>
</ul>
